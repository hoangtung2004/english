<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body { background: #f7f7f7; }
        .flashcard-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-top: 48px;
        }
        .flashcard {
            width: 340px;
            height: 420px;
            perspective: 1200px;
            margin-bottom: 32px;
        }
        .flashcard-inner {
            position: relative;
            width: 100%;
            height: 100%;
            transition: transform 0.6s cubic-bezier(.4,2,.6,1);
            transform-style: preserve-3d;
        }
        .flashcard.flipped .flashcard-inner {
            transform: rotateY(180deg);
        }
        .flashcard-front, .flashcard-back {
            position: absolute;
            width: 100%;
            height: 100%;
            backface-visibility: hidden;
            background: #fff;
            border-radius: 24px;
            box-shadow: 0 4px 24px rgba(0,0,0,0.10);
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 32px 24px 24px 24px;
        }
        .flashcard-back {
            transform: rotateY(180deg);
        }
        .flashcard-img {
            width: 180px;
            height: 180px;
            object-fit: cover;
            border-radius: 12px;
            margin-bottom: 18px;
            background: #f6f6f6;
        }
        .example-sentence {
            font-size: 1.1rem;
            margin-bottom: 12px;
        }
        .word-highlight {
            font-weight: bold;
            text-decoration: underline;
        }
        .pronunciation {
            color: #888;
            font-size: 1.1rem;
            margin-bottom: 8px;
        }
        .meaning {
            font-size: 1.2rem;
            font-weight: 500;
            margin-bottom: 12px;
        }
        .btn-flip {
            background: none;
            border: none;
            position: absolute;
            bottom: 16px;
            right: 16px;
            font-size: 2rem;
            cursor: pointer;
        }
        .sound-btn {
            background: #fff;
            border: 2px solid #eee;
            border-radius: 50%;
            width: 44px;
            height: 44px;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            margin: 0 8px 18px 8px;
            cursor: pointer;
            box-shadow: 0 2px 8px rgba(0,0,0,0.06);
        }
        .btn-next, .btn-mastered {
            width: 180px;
            font-size: 1.1rem;
            border-radius: 24px;
            margin: 0 8px;
        }
        .btn-next {
            background: linear-gradient(90deg,#43e97b 0%,#38f9d7 100%);
            color: #fff;
            border: none;
        }
        .btn-next:disabled {
            background: #ddd;
            color: #aaa;
        }
        .btn-mastered {
            background: #eee;
            color: #444;
            border: none;
        }
        .flashcard-progress-bar {
            width: 100%;
            max-width: 420px;
            margin: auto;
            position: relative;
        }
        .btn-exit {
            position: absolute;
            left: 0;
            top: 0;
            background: none;
            border: none;
            font-size: 2rem;
            z-index: 2;
        }
        .progress {
            height: 8px;
            border-radius: 6px;
            background: #eee;
        }
        .progress-bar {
            height: 8px;
            border-radius: 6px;
            background: #ffd966;
            transition: width 0.4s;
        }
        .progress-value {
            position: absolute;
            right: 0;
            top: 0;
            font-size: 1.2rem;
            color: #888;
        }
    </style>
</head>
<body>
    <div class="container flashcard-container">
        <div class="flashcard-progress-bar">
            <button class="btn-exit" onclick="confirmExit()">‚úñÔ∏è</button>
            <div style="height:18px;"></div>
            <div class="progress">
                <div class="progress-bar" role="progressbar" style="width:<%= Math.round((index+1)/vocabularies.length*100) %>%" aria-valuenow="<%= index+1 %>" aria-valuemin="0" aria-valuemax="<%= vocabularies.length %>"></div>
            </div>
            <div class="progress-value">
                <span><%= index+1 %>/<%= vocabularies.length %></span>
            </div>
        </div>
        <% const v = vocabularies[index]; %>
        <div class="flashcard" id="flashcard" onclick="flipCard(event)">
            <div class="flashcard-inner">
                <!-- M·∫∑t tr∆∞·ªõc -->
                <div class="flashcard-front">
                    <div>
                        <button class="sound-btn" onclick="playAudio('<%= v.word %>', false)"><span>üîä</span></button>
                        <button class="sound-btn" onclick="playAudio('<%= v.word %>', true)"><span>üêå</span></button>
                    </div>
                    <% if (v.image) { %>
                        <img src="<%= v.image %>" class="flashcard-img" alt="<%= v.word %>">
                    <% } %>
                    <div class="example-sentence">
                        <% if (v.example && v.word) { %>
                            <%- v.example.replace(new RegExp(v.word, 'gi'), '<span class="word-highlight">'+v.word+'</span>') %>
                        <% } else { %>
                            <span class="word-highlight"><%= v.word %></span>
                        <% } %>
                    </div>
                    <button class="btn-flip" type="button" onclick="flipCard(event)">üëâ</button>
                </div>
                <!-- M·∫∑t sau -->
                <div class="flashcard-back">
                    <div>
                        <button class="sound-btn" onclick="playAudio('<%= v.word %>', false)"><span>üîä</span></button>
                        <button class="sound-btn" onclick="playAudio('<%= v.word %>', true)"><span>üêå</span></button>
                    </div>
                    <div style="margin-top: 32px;"></div>
                    <div style="font-size:1.5rem;font-weight:bold;margin-bottom:8px;"> <%= v.word %> </div>
                    <div class="pronunciation">/<%= v.pronunciation %>/</div>
                    <div class="meaning"><%= v.meaning %></div>
                    <button class="btn-flip" type="button" onclick="flipCard(event)">üëâ</button>
                </div>
            </div>
        </div>
        <div class="d-flex justify-content-center mb-3">
            <% if (index+1 < vocabularies.length) { %>
            <form method="GET" action="" style="display:inline;">
                <input type="hidden" name="index" value="<%= index+1 %>">
                <button class="btn btn-next">Ti·∫øp t·ª•c</button>
            </form>
            <% } else { %>
            <a href="/vocabulary" class="btn btn-success btn-next">Ho√†n th√†nh</a>
            <% } %>
            <form method="POST" action="/vocabulary/<%= v._id %>/progress" style="display:inline;" onsubmit="return markMastered(event)">
                <input type="hidden" name="status" value="mastered">
                <button class="btn btn-mastered">M√¨nh ƒë√£ thu·ªôc t·ª´ n√†y</button>
            </form>
        </div>
    </div>
    <script>
        let flipped = false;
        function flipCard(e) {
            if (e && (e.target.closest('.sound-btn') || e.target.closest('.btn-next') || e.target.closest('.btn-mastered'))) return;
            const card = document.getElementById('flashcard');
            flipped = !flipped;
            if (flipped) card.classList.add('flipped');
            else card.classList.remove('flipped');
        }
        function playAudio(word, slow) {
            if ('speechSynthesis' in window) {
                const utter = new SpeechSynthesisUtterance(word);
                utter.lang = 'en-US';
                utter.rate = slow ? 0.5 : 1;
                window.speechSynthesis.speak(utter);
            } else {
                alert('Tr√¨nh duy·ªát kh√¥ng h·ªó tr·ª£ ph√°t √¢m!');
            }
        }
        function markMastered(e) {
            e.preventDefault();
            const form = e.target;
            fetch(form.action, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ status: 'mastered' })
            }).then(res => res.json()).then(data => {
                if (data.success) {
                    // Chuy·ªÉn sang t·ª´ ti·∫øp theo
                    window.location.href = '?index=<%= index+1 %>';
                } else {
                    alert('C√≥ l·ªói x·∫£y ra!');
                }
            });
        }
        function confirmExit() {
            if (confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën tho√°t kh·ªèi ch·∫ø ƒë·ªô h·ªçc t·ª´ n√†y kh√¥ng?')) {
                window.location.href = '/';
            }
        }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html> 